import os
from flask import Flask, request, jsonify
from dotenv import load_dotenv
import openai

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è :)
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
WEBHOOK_URL = os.getenv('WEBHOOK_URL')

# –õ–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
print(f"TELEGRAM_BOT_TOKEN: {TELEGRAM_BOT_TOKEN}")
print(f"OPENAI_API_KEY: {OPENAI_API_KEY}")
print(f"WEBHOOK_URL: {WEBHOOK_URL}")

if not TELEGRAM_BOT_TOKEN or not OPENAI_API_KEY or not WEBHOOK_URL:
    raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Render.")

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ API-–∫–ª—é—á–∞ OpenAI
openai.api_key = OPENAI_API_KEY

# –°–æ–∑–¥–∞–Ω–∏–µ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = Flask(__name__)

# PROMT –¥–ª—è OpenAI
PROMPT = (
    "–≠—Ç–æ—Ç GPT –≤—ã—Å—Ç—É–ø–∞–µ—Ç –≤ —Ä–æ–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–∞ –ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤. "
    "–û–Ω —Å–æ–∑–¥–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ–¥–∞—é—â–∏–µ –ø–æ—Å—Ç—ã –Ω–∞ —Ç–µ–º—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ—Ç—Ä–∞—Å–ª–µ–π. "
    "–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è, —É–¥–µ—Ä–∂–∞–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –∏ —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±—Ä–∞—â–µ–Ω–∏—è –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π –∏–ª–∏ –ø–æ–∫—É–ø–∫–∏). "
    "GPT —É—á–∏—Ç—ã–≤–∞–µ—Ç –¥–µ–ª–æ–≤–æ–π, –Ω–æ –Ω–µ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π —Ç–æ–Ω –∏ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–º, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ –≤–æ–≤–ª–µ–∫–∞—é—â–∏–º. "
    "–ü–æ—Å—Ç—ã –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª—è—é—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç–º–æ–¥–∑–∏ –≤ —Å—Ç–∏–ª–µ \"—ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π\", –¥–æ–±–∞–≤–ª—è—è –¥–∏–Ω–∞–º–∏—á–Ω–æ—Å—Ç–∏ –∏ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏. "
    "–ù–∞–ø—Ä–∏–º–µ—Ä: üèóÔ∏è –¥–ª—è —Ç–µ–º—ã —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, üåü –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤, üì≤ –¥–ª—è –ø—Ä–∏–∑—ã–≤–æ–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é. "
    "–í—Å–µ –ø–æ—Å—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç —á–µ—Ç–∫–∏–µ –ø—Ä–∏–∑—ã–≤—ã –∫ –¥–µ–π—Å—Ç–≤–∏—é –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö. "
    "–í –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤: 8-800-550-23-93 –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ \"–ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–æ–≤\", "
    "–∫–æ—Ç–æ—Ä–æ–µ —Ç–∞–∫–∂–µ —è–≤–ª—è–µ—Ç—Å—è –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–æ–π, –≤–µ–¥—É—â–µ–π –Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª https://t.me/associationdevelopers."
)

@app.route('/', methods=['GET'])
def home():
    return "–°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        data = request.get_json()
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram: {data}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ª–æ–≥–∏

        if "message" in data:
            chat_id = data["message"]["chat"]["id"]
            user_message = data["message"].get("text", "")

            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ OpenAI
            response = openai.ChatCompletion.create(
                model="gpt-4",
                messages=[
                    {"role": "system", "content": PROMPT},
                    {"role": "user", "content": user_message},
                ],
            )

            reply = response['choices'][0]['message']['content']
            send_message(chat_id, reply)

        return jsonify({"status": "ok"})
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ª–æ–≥–∏
        return jsonify({"status": "error", "message": str(e)}), 500

def send_message(chat_id, text):
    try:
        import requests
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {"chat_id": chat_id, "text": text}
        response = requests.post(url, json=payload)
        print(f"–û—Ç–≤–µ—Ç Telegram API: {response.json()}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ª–æ–≥–∏
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ª–æ–≥–∏

from waitress import serve

if __name__ == "__main__":
    serve(app, host="0.0.0.0", port=int(os.getenv("PORT", 5000)))